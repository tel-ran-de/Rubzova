-- Тема 01 — простые вопросы на выбор -- используйте таблицу tblemployee.
-- Вопрос 1 - выделить всю таблицу
-- Ответ:


-- Вопрос 2 - выбрать всех женщин. Показывать только имя, пол и номер телефона
-- Ответ:


-- Вопрос 3 - выберите всех мужчин, которые живут в Иерусалиме и Хайфе.
-- Ответ:


-- Вопрос 4 - выбрать всех сотрудников с зарплатой 6000 или 11000
-- Ответ 1 – Используйте оператор ИЛИ:


-- Ответ 2 – Используйте оператор IN:



-- Вопрос 5 - выберите всех сотрудников, которые живут в Иерусалиме и Хайфе с зарплатой от 4000 до 10000
-- Ответ:



-- Вопрос 6 - выбрать всех сотрудников с номером телефона, начинающимся с 050
-- Ответ:


-- Вопрос 7 - выбрать всех сотрудников с номером телефона, который не начинается с 050
-- Ответ:


-- Вопрос 8 - выберите 5 строк со столбцами имени, зарплаты и города в порядке зарплаты (от максимальной зарплаты до минимальной зарплаты)
-- Ответ:
 

-- Вопрос 9 - выберите 25 процентов всех сотрудников и упорядочите по зарплате (от максимальной зарплаты до минимальной зарплаты)
-- Ответ:
 

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Тема 02 - Группировка по вопросам -- используйте таблицу tblemployee
-- Вопрос 1 - показать среднюю зарплату по полу
-- Ответ:


-- Вопрос 2 - показать среднюю зарплату по городам в порядке средней зарплаты от макс до мин
-- Ответ:


-- Вопрос 3 - показать максимальную и минимальную зарплату по полу
-- Ответ:


-- Вопрос 4 - показать максимальную и минимальную зарплату по полу и городу
-- Ответ:



-- Вопрос 5 - показать общую зарплату по полу и городу
-- Ответ:


-- Вопрос 6 – подсчитайте общее количество сотрудников-женщин  
-- Ответ:


-- Вопрос 7 - подсчитайте общее количество сотрудников в Тель-Авиве
-- Ответ:
 

-- Вопрос 8 - показать общую зарплату по городам только для городов с общей зарплатой выше 20000 и ранжировать их от макс до мин.
-- Ответ:



-- Вопрос 9 - показать общую зарплату только для мужчин, проживающих в Иерусалиме и Тель-Авиве.
-- Ответ:	



-- Вопрос 10 - показать общую зарплату только для женщин, которые живут в Иерусалиме и Тель-Авиве, и их номер телефона начинается с 050
-- Ответ:	


--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Тема 03. Объединение вопросов -- используйте три таблицы: 1) tblProducts, 2) tblSubCategory, 3) tblCategory
-- Вопрос 1 - выберите все таблицы и найдите первичный ключ и внешний ключ.
-- Ответ:



-- Вопрос 2. Создайте внутреннее соединение между tblproducts и tblsubcategory.
-- из tblproducts показать productName и productPrice.
-- из tblsubcategory показать имя_подкатегории.
-- Ответ:

    

-- Вопрос 3. Создайте внутреннее соединение между tblproducts, tblsubcategory, tblcategory.
-- из tblproducts показать productName и productPrice.
-- из tblsubcategory показать имя_подкатегории.
-- из tblcategory показать имя_категории.
-- Ответ:



-- Вопрос 4. Создайте внутреннее соединение между tblproducts и tblcategory.
-- из tblproducts показать productName и productPrice.
-- из tblcategory показать имя_категории.
-- Ответ:



-- -Вопрос 5 - создайте ЛЕВОЕ соединение между tblproducts и tblcategory.
-- из tblproducts показать productName и productPrice.
-- из tblcategory показать имя_категории.
-- что случилось?  
-- Ответ:



-- -Вопрос 6 - Показать общую цену продукта по названию категории в порядке от макс до мин.
-- если у вас есть нулевые значения, не показывайте их!  
-- Ответ:



-- -Вопрос 7 - показать название самого дорогого товара с подкатегорией и категорией.   
-- если у вас есть нулевые значения, не показывайте их!  
-- Ответ:


-- -Вопрос 8 - показать название самого дорогого продукта в категории name = 'kitchen'.
-- если у вас есть нулевые значения, не показывайте их!  
-- Ответ:



--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Тема 04 – Замена вопросов с пустыми значениями -- используйте таблицу tblKingOfAnimals
-- Вопрос 1 – создайте самообъединение, в котором отображаются два столбца – Имя животного и Имя доминирующего животного, чтобы для каждого животного вы видели, кто является его доминирующим животным. замените нулевое значение функцией «Царь животных» ИСПОЛЬЗОВАТЬ ISNULL.
-- Ответ:


-- Вопрос 2. Создайте такое же самосоединение. Замените нулевое значение СЛУЧАЙОМ ИСПОЛЬЗОВАНИЯ «Царь животных» (Transact-SQL).  
-- Ответ:


-- Вопрос 3 – создайте такое же самосоединение. Замените нулевое значение на функцию «Царь животных» ИСПОЛЬЗОВАТЬ ОБЪЕДИНЕНИЕ.  
-- Ответ:



-- Вопрос 4. Замените нулевые значения в таблице tblproduct числом «13».   
-- Ответ:


--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Тема 05 - Объединение и объединение всех вопросов -- используйте две группы таблиц:
-- первая группа (tblIsraelCustomers, tblUSCustomers, tblSpainCustomers)
-- вторая группа (tblCategory, tblSubCategory, tblProducts)
-- Вопрос 1 - объединить все таблицы из первой группы. ИСПОЛЬЗУЙТЕ UNION ALL OPERATION.
-- Ответ:


-- Вопрос 2 -объединить все таблицы из первой группы. ИСПОЛЬЗУЙТЕ ОПЕРАЦИЮ UNION
-- Ответ:


-- Вопрос 3. В чем основное различие между двумя запросами? введите свой ответ.
-- Ответ:



-- -Вопрос 4 - используйте таблицы : (tblCategory, tblSubCategory, tblProducts).  
-- показать самый дорогой продукт каждой подкатегории и категории. используйте технику оператора UNION ALL AND Subquery.
-- если у вас есть нулевые значения, не показывайте их!  
-- Ответ:



--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Тема 06 - Математические функции -- используйте таблицу tblGenderMeasurements.
-- Вопрос 1. Создайте AVG для каждого из параметров: Возраст, Рост и Вес по полу. точно, увеличьте число AVG для каждого из параметров.
-- Ответ:



-- Вопрос 2. Создайте тот же запрос, но теперь укажите числа AVG.
-- Ответ:


-- Вопрос 3. Создайте тот же запрос, но теперь округляйте числа AVG.
-- Ответ:



--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Тема 07 - Функции даты и времени
-- Вопрос 1 - показать, какое сегодня число
-- Ответ:


-- Вопрос 2 --
-- A.показать текущий день месяца
-- B. Показать день даты «01.01.2019»
-- Ответ:


-- Вопрос 3 --
-- A.показать текущий месяц года
-- B. Показать месяц даты "01/01/2019"
-- Ответ:


-- Вопрос 4 --
-- A.показать текущий год
-- B. Показать год даты «01.01.2019»
-- Ответ:


-- Вопрос 5 - показать, какое имя дня, дня недели и месяца даты "01/01/2019"
-- Ответ:


-- Вопрос 6 - ВНИМАНИЕ! - Теперь используйте таблицу tlbEmployee. показать разницу между датой найма и текущей датой по дням.
-- Ответ:


-- Вопрос 7 - ВНИМАНИЕ! - Теперь используйте таблицу tlbEmployee. показать разницу между датой найма и текущей датой по месяцам.
-- Ответ:



-- Вопрос 8 - ВНИМАНИЕ! - Теперь используйте таблицу tlbEmployee. показать работника с самым высоким стажем в работе.
-- Ответ:



-- Вопрос 9 - ВНИМАНИЕ! - Теперь используйте таблицу tlbEmployee. Прибавьте к работнику с самым высоким трудовым стажем 2 месяца работы.
-- показать весь его профиль.
-- показать месяцы, добавленные к дате найма (чтобы добавить месяцы, вам нужно отрицательное число)
-- показать разницу дат по месяцам с даты найма.
-- показать разницу дат по месяцам от даты добавления месяцев.   
-- Ответ:




--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Тема 08 – Строковые функции – используйте таблицу tblStringTest
-- Вопрос 1 - увидеть пробелы в таблице и удалить пробелы с левой стороны строки.
-- Ответ:


-- Вопрос 2 - увидеть пробелы в таблице и удалить пробелы с левой и правой стороны строки.
-- Ответ:


-- Вопрос 3. Чтобы проверить, были ли удалены пробелы, ИСПОЛЬЗУЙТЕ функцию len, чтобы показать разницу между длиной строки без функций обрезки и с функцией обрезки.
-- показать:
-- имя
-- len без обрезки - имя
-- имя с отделкой,
-- len с отделкой - имя,
-- отчество
-- len без обрезки - отчество
-- отчество с отделкой,
-- лен с отделкой - отчество
-- Ответ:


-- Вопрос 4 - показать все столбцы. Сократите имя и фамилию. Для имени замените все символы на верхнюю строку, а для отчества замените все символы на нижнюю строку.
-- Ответ:



-- Вопрос 5 - возьмите первые две буквы слева от столбца имени.
-- Ответ:



-- Вопрос 6 - возьмите первые две буквы справа от столбца имени.
-- Ответ:


-- Вопрос 7 – Соедините две буквы слева и справа от имени в одну строку.
-- Ответ:

-- Вопрос 8 – меняет строку Connected на обратную из последнего вопроса.
-- Ответ:


- Вопрос 9 - показать два столбца - 1) Электронная почта, 2) Символ индекса (@) электронной почты в таблице.
-- Ответ:


-- Вопрос 10 – Найти только доменную часть @aaa.com электронной почты – 'tomer@aaa.com'
-- Ответ:


-- Вопрос 11 :
-- показать полное имя без пробелов - имя + отчество + фамилия
-- показать почту
-- показывать только имя из письма
-- Показать только доменную часть каждого письма
-- показывать только часть справа до первой точки домена (com/co.il)
-- замените com/co.il на 'ZZZZZZZZ'
-- Ответ:


--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Тема -09- Поиск символа - используйте tblCharacter
-- Вопрос 1 - найти все электронные письма с символом % ИСПОЛЬЗОВАТЬ НРАВИТСЯ и [].
-- Ответ:


-- Вопрос 2 - найти все электронные письма с символом % ИСПОЛЬЗОВАТЬ НРАВИТСЯ и функцию ESCAPE
-- Ответ:


-- Вопрос 3 - найти все электронные письма с двумя символами % ИСПОЛЬЗОВАТЬ CHARINDEX
-- Ответ:


--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Тема 10 - Функция Patindex - используйте таблицу tblPassword.
-- Вопрос 1 - Извлеките все пароли. если нет пароля показать строку.  
-- Ответ:

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Тема 11 – Подсчет букв – используйте таблицу tblCountingLetters
-- Вопрос 1 - подсчитайте, сколько букв 'e' в этой строке   
-- Ответ:


--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Тема 12 - Функции CAST и CONVERT - используйте таблицу tblEmployee. в вопросе 3 - используйте tblproducts Table.
-- Вопрос 1 – Создайте столбец – FullID (Имя + Фамилия + Номер удостоверения личности), а также покажите пол, адрес электронной почты, зарплату и город. Используйте функцию CAST.
-- Ответ:


-- Вопрос 2. ДОБАВЬТЕ в запрос функцию преобразования в столбце Дата приема на работу. используйте формат, который вы хотите сделать дату более читаемой для вас.  
-- В параметре стиля у нас есть некоторый формат, который можно использовать, чтобы добавить функцию CONVERT.
-- Вот все форматы, которые у нас есть:
-- 101 = мм/дд/гггг
-- 102 = гг.мм.дд
-- 103 = дд/мм/гггг
-- 104- дд.мм.гг
-- 105- дд.мм.гг
-- Ответ:



-- Вопрос 3 - ВНИМАНИЕ! Теперь используйте таблицу tblproduct. Замените пустые значения в таблице tblproduct на «Категорию продуктов питания». ИСПОЛЬЗУЙТЕ CAST Transact-SQL.    
-- Ответ:


--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Тема 13 – Хранимая процедура – ​​используйте таблицу tblEmployee
-- Вопрос 1 - Создать SP на запрос" выберите имя, фамилию, пол, адрес электронной почты, зарплату, город из tblEmployee
-- Ответ:


-- Позвоните в ИП, чтобы увидеть информацию
-- Ответ:

-- Удалить сп
-- Ответ:


-- Вопрос 2 - Создать SP на запрос :
-- выберите имя, фамилию, пол, адрес электронной почты, зарплату, город из tblEmployee
-- Создайте также входные параметры @gender, @city для вызова sp для получения более точной информации.
-- Ответ:


-- Позвоните в сп, чтобы увидеть информацию о женщинах из Тель-Авива.
-- Ответ:

-- Позвоните в sp, чтобы увидеть информацию о мужчинах из Иерусалима.
-- Ответ:

-- Позвоните в сп, чтобы увидеть информацию о мемах из Хайфы
-- Ответ:


-- Вопрос 3 - Изменить тот же SP:
-- Добавьте также выходные параметры @EmployeeCount, @TotalSalary для выходной информации.
-- В конце нужно указать пол и город, а также получить количество сотрудников и общую зарплату этой группы.
-- Ответ:


-- Позвоните в ИП и покажите, сколько у нас сотрудников мужского пола в городе Тель-Авив и какая у них общая зарплата.
-- Ответ:


-- Позвоните в ИП и покажите, сколько женщин работает у нас в городе Хайфа и какова их общая зарплата.
-- Ответ:

-- Удалить ИП
-- Ответ:



--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Тема 14 – Индекс – используйте таблицу tblEmployee
-- Вопрос 1. Какова цель индекса? введите свой ответ удар.
-- Ответ:

-- Вопрос 2 - создайте индекс для столбца зарплаты в tblemployee
-- Ответ:


-- Вопрос 3 - Проверьте индекс.
-- Ответ:


-- Вопрос 4 - Удалить индекс
-- Ответ:


-- Вопрос 5. В чем основная разница между кластеризованными и некластеризованными индексами?
-- Ответ:
 

-- Вопрос 6 – как насчет уникальности индекса – кластеризованного и некластеризованного?
-- Ответ A – кластеризованный: введите свой ответ и синтаксис указателя:



-- Ответ B – Некластеризованный: введите свой ответ и синтаксис указателя:



--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Тема 15 – Представления – используйте таблицы tblEmployee и tblDepartment.
-- Вопрос 1 - что такое представление?  
-- Ответ:


-- Вопрос 2 - Каковы преимущества просмотров?
-- Ответ:  


-- Вопрос 3 - создайте представление только для ИТ-руководителя, чтобы он мог видеть только информацию о своих сотрудниках. ПРИМЕЧАНИЕ! - Используйте таблицы tbleEmployee и tblDepartment.
-- Ответ:


-- Вызвать вид
-- Ответ:


-- Удалить вид
-- Ответ:


-- Вопрос 4 - создать представление для всей информации о сотруднике, включая имя отдела. не включайте колонку зарплаты.
-- Ответ:


-- Вызвать вид
-- Ответ:


-- Если вы не знаете оператор создания представления, как вы можете знать, что это было?
-- Ответ:


-- Удалить вид
-- Ответ:


-- Вопрос 5 - создайте представление супербоссу, чтобы увидеть, какой отдел стоит больше всего.
-- Ответ:


-- Вызвать вид
-- Ответ:



-- Удалить вид
-- Ответ:


-- Вопрос 6 - Можно ли обновить представление?
-- Ответ:
 


-- Вопрос 7. Можно ли создать индекс представления?
-- Ответ:

 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Тема 16 – Пользовательские функции – используйте таблицы tblEmployee и tblDepartment.
-- Вопрос 1 - создайте функцию, чтобы при вводе названия отдела вы получали всю общую стоимость отдела по зарплате сотрудников.  
-- Ответ:



-- Вызов функции для просмотра информации отдела кадров
-- Ответ:



-- Вопрос 2 - измените функцию, чтобы при вводе названия отдела и пола вы получали все общие расходы отдела по полу и зарплате сотрудников.  
-- Ответ:



-- Вызовите функцию, чтобы увидеть зарплату женщин в отделе кадров.
-- Ответ:



-- Показать оператор создания функции
-- Ответ:



-- Удалить функцию
-- Ответ:


-- Вопрос 3 - ВНИМАНИЕ! Используйте таблицы tblcategory, tblsubcategory и tblproducts.
-- создать функцию, которая вычисляет общую стоимость всех товаров по категориям
-- Ответ: 	  



-- Выберите название категории и реализуйте функцию: кухня, гостиная, спальня, электроприбор.
-- Ответ:



-- Вопрос 4 - используйте таблицы tblcategory, tblsubcategory и tblproducts.
-- изменить функцию, чтобы она была более точной - изменить категорию на подкатегорию.
-- Ответ:



 
-- Выберите имя подкатегории и внедрите в функцию:  
-- Кухня (раковина, кран, шкаф)
-- Гостиная (диван, обеденный стол, мягкое кресло)
-- Спальня (Кровать, Стол, Зеркало)
-- Электроприбор (телевизор, стиральная машина, электрический обогреватель)
-- Ответ:




-- Удалить функцию
-- Ответ:



--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Тема 17 - Временные таблицы - ДВЕ ГРУППЫ ТАБЛИЦ: A.(tblProduct, tblSubCategory, tblCategory), B.(tblEmployee, tblDepartment)  
-- Вопрос 1 – какие существуют типы временных таблиц?
-- Ответ:


-- Вопрос 2 - почему мы используем временные таблицы?  
-- Ответ:

 

-- Вопрос 3. Создайте соединение между tblcategory, tblsubcategory и tblproducts. показать productid, productName, productPrice, SubCategoryName, CategoryName. вставьте это соединение во временную таблицу.  
-- шаг первый- создайте соединение
-- Ответ:


-- шаг второй - вставьте запрос в temptable
-- Ответ:


-- выбрать все данные из #temptable
-- Ответ:


-- выбрать все данные по названию подкатегории - сток из #temptable
-- Ответ:


-- показать общую стоимость продукта подкатегории раковины
-- Ответ:


- удалить #tempetable
-- Ответ:


-- Вопрос 4. Создайте соединение между таблицами tblemployee и tblDepartment. показать идентификатор сотрудника, полное имя, электронную почту, зарплату, дату найма, имя отдела. вставьте это соединение в temptable.
-- шаг первый - создать соединение
-- Ответ:


-- шаг второй - вставьте запрос в temptable
-- Ответ:


-- Выберите все данные из #temptable 2
-- Ответ:


-- Выберите всех сотрудников из названия отдела "HR"
-- Ответ:

-- Выберите нового сотрудника отдела кадров (по дате приема на работу) и подарите ему 15% подарок за вступление в нашу компанию.
-- Ответ:


-- Удалить #temptable2
-- Ответ:


--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Тема 18 – Операторы If – используйте таблицу tblemployee
-- Вопрос 1. Каков основной синтаксис операторов if на сервере sql?
-- Ответ:



-- Вопрос 2. Возвращает черный цвет, поскольку логическое выражение оценивается как ИСТИНА
-- A. Сначала объявить переменную - тип цвета int
-- Б. секунда - установить переменную на 1
-- C. третий - создать оператор if. Черный — правда, белый — ложь.
-- Ответ:



-- Вопрос 3. Создайте CASE Statemet для tblemployee. все сотрудники до и после 2008 года являются старшими, а все сотрудники после 2008 года - младшими.  
-- Ответ:



-- Вопрос 4. Замените утверждение CASE выражением IIF.  
-- Ответ:



-- Вопрос 5 - создать хранимую процедуру (СП) на последний запрос. используйте оператор if для трех случаев:
-- 01- если оператор выбрать «Все» сотрудников
-- 02- if оператор для выбора «Старших» сотрудников
-- 03- оператор if для выбора «младших» сотрудников
-- 04- создать сообщение об ошибке ввода.
-- шаг первый - создайте sp и создайте первый оператор if
-- Ответ:



-- шаг второй - добавьте второй и третий операторы if + сообщение об ошибке при вводе.
-- Ответ:



-- выбрать всех сотрудников
-- Ответ:


-- выбрать только старших сотрудников
-- Ответ:


-- выбрать только младших сотрудников
-- Ответ:


-- выберите один из трех вариантов, но с орфографической ошибкой
-- Ответ:


--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Тема -19- Производные таблицы - используйте таблицы tblProducts, tblSubCategory и tblCategoty.
-- Вопрос 1. Каков основной синтаксис производных таблиц?
-- Ответ:

 


-- Вопрос 2 - в чем разница между производными таблицами и временными таблицами?
-- Ответ:
 


-- Вопрос 3 --
-- Шаг первый: создайте внутреннее соединение между tblProducts, tblSubCategory и tblCategoty. Выберите ProductName, ProductPrice, SubCategoryName, CategoryName.
-- Ответ:



-- Шаг второй: создайте производную таблицу для объединения и выберите все данные из категории имя = 'Гостиная'
-- Ответ:




-- Вопрос 4. В той же производной таблице создайте оператор if – все товары с ценой выше или равной 5000 являются «высокой ценой», а все остальные – «низкой ценой».
-- Ответ:  




--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Тема -20- Номер строки и раздел - используйте таблицу tblemployee
-- Вопрос 1. Создайте номер строки в столбце employeeID.
-- Ответ:



-- Вопрос 2. Создайте номер строки в столбце employeeID, но в обратном порядке.
-- Ответ:



-- Вопрос 3. Создайте номер строки в столбце пола. для каждого пола дайте свои цифры. ИСПОЛЬЗОВАТЬ РАЗДЕЛ ПО.
-- Ответ:


-- Вопрос 4
-- Шаг первый: Создайте столбец с типом зарплаты - для зарплаты выше или равной 5000 укажите «Высокая зарплата», а для остальных укажите «Низкая зарплата».
-- Ответ:



-- Шаг второй: теперь в новом столбце создайте номер строки для каждой группы. внутри каждой группы ранжируются работники от самой высокой зарплаты до самой низкой зарплаты.
-- Ответ:  



-- Шаг третий: выберите самую высокую зарплату из каждой группы
-- Ответ:




-- Шаг четвертый: выберите самую низкую зарплату из каждой группы
-- Ответ:




-- Шаг пятый: выберите самую низкую и самую высокую зарплату из каждой группы и отобразите их в одной таблице в порядке оклада.
-- Ответ:





--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Тема -21- Плотное ранжирование и разделение по - используйте таблицу tblemployee
-- Вопрос 1. Создайте Dense Rank в столбце зарплаты от самой высокой до самой низкой зарплаты.
-- Ответ:



-- Вопрос 2. Создайте плотное ранжирование в столбце зарплаты от самой высокой до самой низкой зарплаты по полу.
-- Ответ:


-- Вопрос 3. Создайте плотное ранжирование в столбце зарплаты от самой высокой до самой низкой зарплаты по городам.
-- Ответ:


-- Вопрос 4. Найдите среднюю зарплату в каждом городе и сравните ее с другими городами.
-- Ответ:



-- Вопрос 5 --
-- Шаг первый: найдите среднюю зарплату для каждого города и пола.
-- Ответ:



-- Шаг второй: создайте производную таблицу для запроса и назовите ее Salary_City_Gender. Заказ столика по городу
-- Ответ:



-- Шаг третий: поскольку у нас есть повторяющиеся строки для каждого города, измените вторую строку каждого города на нулевые значения. используйте номер строки для подсчета дубликатов, а затем используйте другую производную таблицу, чтобы создать условие случая для номера строки для замены значений.  
-- Ответ:




-- Шаг четвертый: ранжируйте среднюю зарплату мужчин и женщин в каждом городе. сохранил структуру таблицы.
-- Ответ:



--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Тема -22- CTE - Общее табличное выражение - используйте таблицы tblemployee и tblDepartment
-- Вопрос 1 – каков основной синтаксис CTE?
-- Ответ:


-- Вопрос 2. Создайте соединение между таблицами tblEmployee и tblDepartment. затем создайте CTE и покажите полные данные соединения. выберите employeeID, FirstName, LastName, Gender, Email, PhoneNumer, Salary, City, HireDate, DepartmentName, DepartmentHead.  
-- Ответ:




-- Вопрос 3 - Из того же ктэ выбрать только сотрудников начальника отдела по имени Рот
-- Ответ:



-- Вопрос 4 - Из того же cte найдите среднюю зарплату начальника отдела по имени Шими и покажите также название его отдела.
-- Ответ:




-- Вопрос 5 - создайте номер строки зарплаты по полу и выберите лучших сотрудников каждого пола с CTE. Создайте плотный ранг, чтобы ранжировать их зарплату в CTE.
-- Ответ:



--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Тема -23- Повторяющиеся значения - используйте таблицу tblDuplicates.
-- Вопрос 1 - показать все повторяющиеся строки
-- Ответ:


-- Вопрос 2 - показывать только отдельные строки. исключить все повторяющиеся строки.
-- Ответ:



-- Вопрос 3 - показать только отдельные строки в таблице. исключить все дубликаты.
-- Ответ:



-- Вопрос 4 - показывать только отдельные строки из повторяющихся строк.
-- Ответ:



-- Вопрос 5 - удалить повторяющиеся строки. не удаляйте строки, если хотите потренироваться на столе! Просто введите свой ответ.
-- Ответ:




--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Тема -24- Функция Ntile - используйте таблицы tblEmployee, tblProduct, tblSubCategory, tblCategory.
-- Вопрос 1 - разделить сотрудника на три группы с помощью функции NTILE
-- Ответ:



-- Вопрос 2 - разделить сотрудника на две группы по полу с помощью функции NTILE
-- Ответ:


-- Вопрос 3 - разделить сотрудника на две группы в рамках DepartmentID с помощью функции NTILE
-- Ответ:



-- Вопрос 4 --
-- Шаг первый: создайте соединение между tblProduct, tblSubCategory, tblCategory – выберите productName, ProductPrice, SubCategoryName, CategoryName.
-- Ответ:



-- Шаг второй: создайте CTE для соединения и используйте функцию NLTILE, чтобы разделить ProductPrice на 4. Затем вставьте CTE во временную таблицу.
-- Ответ:



-- Шаг третий: выберите самые дорогие товары из временной таблицы и расположите их в порядке убывания.
-- Ответ:




--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Тема -25- Функция отставания и опережения - используйте таблицу tblSalary
-- Вопрос 1 (LAG Question) - создать среднюю зарплату по годам. вставьте запрос в CTE и используйте LAG, чтобы увидеть предыдущую зарплату AVG за год.
-- Ответ:



-- Вопрос 2 (вопрос LAG) - по последнему CTE найдите годовой процент изменения между средней годовой зарплатой и предыдущей средней годовой зарплатой. Добавьте к расчету символ %. процент изменения = ((день/месяц/год - предыдущий день/месяц/год)*100)/предыдущий день/месяц/год
-- Ответ:




-- Вопрос 3 (LEAD Question) - в таблице Product найдите разницу в цене товара между самым дорогим и самым дешевым товаром той же категории. Используйте CTE и вставьте его значения в #temptable.   
-- Ответ:



-- вызовите #temptable и добавьте два столбца:
-- 1) Низкая цена по категориям. Используйте лид-функцию. также преобразуйте максимальную цену в этом столбце в нулевые значения.  
-- 2) Разрыв между дорогими и дешевыми продуктами по категориям. Вычислите разницу между более высокой ценой и более низкой ценой. преобразовать отрицательные числа в нулевые значения.
-- Ответ:    



--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Тема -26- Скользящее окно - используйте таблицу tblSalary, используйте таблицу tblEmployee
-- Вопрос 1 - ВНИМАНИЕ! Используйте tblEmployee — найдите общую зарплату всех сотрудников. Используйте функцию скользящего окна.
-- Ответ:



-- Вопрос 2 - ВНИМАНИЕ! Используйте tblEmployee — найдите общую зарплату всех сотрудников по каждому отделу. Используйте функцию скользящего окна.
-- Ответ:



-- Вопрос 3 - ВНИМАНИЕ! Используйте tblSalary — найдите общую зарплату каждого сотрудника.
-- Ответ:



-- Вопрос 4 - ВНИМАНИЕ! Используйте tblSalary — найдите общую зарплату за каждый год. в каждом году показать расходы на заработную плату каждого работника, которые вносят вклад в общую заработную плату за каждый год. наконец, создайте раздел номеров строк по годам и упорядочите по идентификатору сотрудника.  
-- Ответ:



-- Вопрос 5 - ВНИМАНИЕ! Используйте tblSalary — вставьте последний запрос в CTE и покажите для каждого года общую стоимость заработной платы в одной строке. показать только год и общую зарплату.  
-- Ответ:




--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Тема -27- Основная сводка - используйте таблицу tblSalary
-- Вопрос 1. Создайте сводную таблицу, где X = Имя сотрудника, Y = Год и Z = Зарплата.
-- Ответ:




-- Вопрос 2 - Создайте такой же свод. но на этот раз используйте динамический поворот. для этого выполните следующие действия:
-- 01- Объявить переменную @EmployeeName NVARCHAR
-- 02- Объявить еще одну переменную @Query NVARCHAR
-- 03 - Установите переменную @EmpoyeeName - используйте STUFF, QUOTENAME и XML PATH, чтобы записать все имена в виде имен в каждой скобке. например [Амир], [Эли], [Эстер]...
-- 04- Установите @Query как все команды выбора и поворота внутри кавычек. когда вам нужно вставить имена сотрудников, используйте переменную @EmployeeName. например - FOR EmployeeName IN (' + @EmployeeName + ')...
-- 05- Выполнить @Query
-- Ответ:



--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Тема -28- Базовый UnPivot - использование таблицы сравнения tblPhoneComparison
-- Вопрос 1. Создайте несводную таблицу, где X = вес в г, оценка качества, цена, Y = имя продукта и Z = значения.
-- Ответ:




-- Вопрос 2 - вставьте всю новую таблицу во временную таблицу с именем #TEMP2000. Затем выберите временную таблицу и ранжируйте цену для каждого телефона.
-- Ответ:




--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Тема -29- Несколько CTE - используйте таблицу tlbEmployee
-- Вопрос 1 - покажите двух сотрудников - с самым высоким стажем и с самым низким стажем.
-- 01- создать cte с datediff по месяцам от даты найма до даты получения.
-- 02- создайте второй cte и используйте первый cte для ранжирования даты по месяцам.
-- 03- выбрать из второго cte двух сотрудников - с самым высоким стажем и с самым низким стажем.
-- Ответ:





-- Вопрос 2 – используйте tblproduct – найдите разницу в цене между самой дорогой группой товаров.
-- 01- создайте ценовую категорию - когда цена превышает 5500, пометьте ее как Высокая цена, иначе низкая цена.
-- 02- создайте cte для этого оператора select.
-- 03- используйте второй cte для ранжирования цены в группе High.
-- 04- используйте третий cte, чтобы выбрать самую высокую цену продукта и самую низкую цену продукта из высокой ценовой группы.
-- 05- вызовите третий cte и используйте его для самостоятельного соединения, затем найдите разницу в цене между двумя продуктами. выберите только одну строку - в этой строке отобразите - высокое название продукта, высокая цена продукта, низкое название продукта, низкая цена продукта и разница в цене.  
-- Ответ:







-- Вопрос 3 - используйте tblGenderMeasurements - найдите разницу между средними значениями измерений мужчин и средними значениями измерений женщин.
-- 01- найти возраст, вес и рост AVG каждой группы
-- 02- создать примечание к оператору select.
-- 03- создайте второй cte и используйте первый cte для создания номера строки для каждой группы
-- 04- создайте третий cte и выберите просто rownumber = 1 (женский)
-- 05- создайте четвертый cte и выберите просто rownumber = 2 (мужской)
-- 06- используйте 3 и 4 cte и создайте между ними соединение, затем определите среднюю разницу между группами.
-- Ответ:






 --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Тема -30- Рекурсивные CTE - используйте таблицу tblKingOfAnimals
-- Вопрос 1 - Создайте рекурсивное приведение к царю зверей. используйте самосоединение, чтобы показать имя животного и имя доминирующего животного.
-- Ответ:





-- Вопрос 2. Создайте тот же рекурсивный cte, но теперь сначала объявите идентификатор животного. затем вставьте @animalID в cte.
-- затем используйте его в самообъединении, поэтому, когда вы устанавливаете @animalID, в результатах вы получаете организованную иерархию от @animalID до конечного результата царя животных.  
-- Ответ:


